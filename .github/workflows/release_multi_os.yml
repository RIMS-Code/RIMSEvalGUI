name: Release Multi OS

on: [pull_request]
#  push:
#    # Sequence of patterns matched against refs/tags
#    tags:
#    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-windows:
    name: Window packaging / release creation
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ${{ secrets.FBS_DL }}
      - name: Run fbs and freeze application
        run: |
          fbs freeze
          fbs installer
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          # body: ""  # release message, alternative to body_path
          body_path: release_text.md  # uncomment if not used
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: target/RIMSEvaluationSetup.exe
          asset_name: RIMSEvaluationSetup.exe
          asset_content_type: application/exe

  build-macos:
    name: MacOS Packaging
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ${{ secrets.FBS_DL }}
      - name: Run fbs and freeze application
        run: |
          fbs freeze
          fbs installer
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/RIMSEvaluation.dmg
          asset_name: RIMSEvaluation.dmg
          tag: ${{ github.ref }}
          overwrite: true

  build-ubuntu:
    name: Ubuntu Packaging
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [ 3.9 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install fpm (required for fbs)
        run: |
          sudo apt-get install ruby ruby-dev rubygems build-essential
          sudo gem install --no-document fpm
          fpm --version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ${{ secrets.FBS_DL }}
      - name: Run fbs and freeze application
        run: |
          fbs freeze
          fbs installer
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/fbs_tutorial_appSetup.exe
          asset_name: fbs_tutorial_appSetup.exe
          tag: ${{ github.ref }}
          overwrite: true